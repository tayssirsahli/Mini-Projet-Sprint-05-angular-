{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.apiURL = 'http://localhost:9000/users';\n    this.helper = new JwtHelperService();\n    this.isloggedIn = false;\n  }\n  login(user) {\n    return this.http.post(this.apiURL + '/login', user, {\n      observe: 'response'\n    });\n  }\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n    this.token = jwt;\n    this.isloggedIn = true;\n  }\n  decodeJWT() {\n    if (this.token == undefined) return;\n    const decodedToken = this.helper.decodeToken(this.token);\n    this.roles = decodedToken.roles;\n    this.loggedUser = decodedToken.sub;\n  }\n  getToken() {\n    return this.token;\n  }\n  logout() {\n    this.isloggedIn = false;\n    this.loggedUser = undefined;\n    this.roles = undefined;\n    localStorage.removeItem('loggedUser');\n    localStorage.setItem('isloggedIn', String(this.isloggedIn));\n    this.router.navigate(['/login']);\n  }\n  /*\n   SignIn(user: User): Boolean {\n     let validUser: Boolean = false;\n     this.users.forEach((curUser) => {\n       if (user.username == curUser.username && user.password == curUser.password) {\n         validUser = true;\n         this.loggedUser = curUser.username;\n         this.isloggedIn = true;\n         this.roles = curUser.roles;\n         localStorage.setItem('loggedUser', this.loggedUser);\n         localStorage.setItem('isloggedIn', String(this.isloggedIn));\n       }\n     });\n   return validUser;\n  }\n  */\n  isAdmin() {\n    if (!this.roles) return false;\n    return this.roles.indexOf('ADMIN') >= 0;\n  }\n  setLoggedUserFromLocalStorage(login) {\n    this.loggedUser = login;\n    this.isloggedIn = true;\n    //this.getUserRoles(login);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtHelperService","AuthService","constructor","router","http","apiURL","helper","isloggedIn","login","user","post","observe","saveToken","jwt","localStorage","setItem","token","decodeJWT","undefined","decodedToken","decodeToken","roles","loggedUser","sub","getToken","logout","removeItem","String","navigate","isAdmin","indexOf","setLoggedUserFromLocalStorage","_","i0","ɵɵinject","i1","Router","i2","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\2éme annéé\\s1\\angular\\cosmetique\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../model/User.model';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiURL: string = 'http://localhost:9000/users';\n  token!: string;\n  private helper = new JwtHelperService();\n\n\n  /*\n  users: User[] = [{\"username\":\"admin\",\"password\":\"123\",\"roles\":['ADMIN']},\n                  {\"username\":\"Tayssir\",\"password\":\"123\",\"roles\":['USER']} ];\n  */\n  public loggedUser!: string;\n  public isloggedIn: Boolean = false;\n  public roles!: string[];\n\n  constructor(private router: Router,\n    private http: HttpClient) { }\n\n  login(user: User) {\n    return this.http.post<User>(this.apiURL + '/login', user, { observe: 'response' });\n  }\n  saveToken(jwt: string) {\n\n    localStorage.setItem('jwt', jwt);\n    this.token = jwt;\n    this.isloggedIn = true;\n  }\n\n  decodeJWT() {\n    if (this.token == undefined)\n      return;\n    const decodedToken = this.helper.decodeToken(this.token);\n    this.roles = decodedToken.roles;\n    \n    this.loggedUser = decodedToken.sub;\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  logout() {\n    this.isloggedIn = false;\n    this.loggedUser = undefined!;\n    this.roles = undefined!;\n    localStorage.removeItem('loggedUser');\n    localStorage.setItem('isloggedIn', String(this.isloggedIn));\n    this.router.navigate(['/login']);\n  }\n\n  /*\n   SignIn(user: User): Boolean {\n     let validUser: Boolean = false;\n     this.users.forEach((curUser) => {\n       if (user.username == curUser.username && user.password == curUser.password) {\n         validUser = true;\n         this.loggedUser = curUser.username;\n         this.isloggedIn = true;\n         this.roles = curUser.roles;\n         localStorage.setItem('loggedUser', this.loggedUser);\n         localStorage.setItem('isloggedIn', String(this.isloggedIn));\n       }\n     });\n   return validUser;\n }\n */\n\n  isAdmin(): Boolean {\n    if (!this.roles)\n      return false;\n    return this.roles.indexOf('ADMIN') >= 0;\n  }\n \n\n  setLoggedUserFromLocalStorage(login: string) {\n    this.loggedUser = login;\n    this.isloggedIn = true;\n    //this.getUserRoles(login);\n  }\n\n  /*\n  getUserRoles(username: string) {\n    this.users.forEach((curUser) => {\n      if (curUser.username == username) {\n        this.roles = curUser.roles;\n      }\n    });\n}\n*/\n\n}\n"],"mappings":"AAIA,SAASA,gBAAgB,QAAQ,oBAAoB;;;;AAKrD,OAAM,MAAOC,WAAW;EAetBC,YAAoBC,MAAc,EACxBC,IAAgB;IADN,KAAAD,MAAM,GAANA,MAAM;IAChB,KAAAC,IAAI,GAAJA,IAAI;IAdd,KAAAC,MAAM,GAAW,6BAA6B;IAEtC,KAAAC,MAAM,GAAG,IAAIN,gBAAgB,EAAE;IAQhC,KAAAO,UAAU,GAAY,KAAK;EAIJ;EAE9BC,KAAKA,CAACC,IAAU;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,MAAM,GAAG,QAAQ,EAAEI,IAAI,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACpF;EACAC,SAASA,CAACC,GAAW;IAEnBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,GAAG,CAAC;IAChC,IAAI,CAACG,KAAK,GAAGH,GAAG;IAChB,IAAI,CAACN,UAAU,GAAG,IAAI;EACxB;EAEAU,SAASA,CAAA;IACP,IAAI,IAAI,CAACD,KAAK,IAAIE,SAAS,EACzB;IACF,MAAMC,YAAY,GAAG,IAAI,CAACb,MAAM,CAACc,WAAW,CAAC,IAAI,CAACJ,KAAK,CAAC;IACxD,IAAI,CAACK,KAAK,GAAGF,YAAY,CAACE,KAAK;IAE/B,IAAI,CAACC,UAAU,GAAGH,YAAY,CAACI,GAAG;EACpC;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,KAAK;EACnB;EAEAS,MAAMA,CAAA;IACJ,IAAI,CAAClB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACe,UAAU,GAAGJ,SAAU;IAC5B,IAAI,CAACG,KAAK,GAAGH,SAAU;IACvBJ,YAAY,CAACY,UAAU,CAAC,YAAY,CAAC;IACrCZ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEY,MAAM,CAAC,IAAI,CAACpB,UAAU,CAAC,CAAC;IAC3D,IAAI,CAACJ,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEA;;;;;;;;;;;;;;;;EAiBAC,OAAOA,CAAA;IACL,IAAI,CAAC,IAAI,CAACR,KAAK,EACb,OAAO,KAAK;IACd,OAAO,IAAI,CAACA,KAAK,CAACS,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;EACzC;EAGAC,6BAA6BA,CAACvB,KAAa;IACzC,IAAI,CAACc,UAAU,GAAGd,KAAK;IACvB,IAAI,CAACD,UAAU,GAAG,IAAI;IACtB;EACF;EAAC,QAAAyB,CAAA,G;qBA9EU/B,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtC,WAAW;IAAAuC,OAAA,EAAXvC,WAAW,CAAAwC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}