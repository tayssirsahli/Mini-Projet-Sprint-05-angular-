{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ArticleService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiURL = 'http://localhost:8090/cosmetiques/api';\n    this.apiURL_class = 'http://localhost:8090/cosmetiques/clas';\n    /*\n      this.classifications = [ {idClas : 1,nomClas : \"Maquillage\"},\n                              {idClas : 2, nomClas : \"Soins de la peau\"},\n                              {idClas : 3, nomClas : \"Soins capillaires\"},\n                              {idClas : 4, nomClas : \"Parfums\"},\n                              {idClas : 5, nomClas : \"article d'hygiène personnelle\"},\n                              {idClas : 6, nomClas : \"Soins des ongles\"}];\n         \n    this.cosmetiques  = [\n      { idarticle: 1, nomarticle: \"SUN SECURE Blur SPF50\", prixarticle: 69, dateCreation: new Date(\"2011-01-14\") , Classification : {idClas : 2, nomClas : \"Soins de la peau\"}},\n      { idarticle: 2, nomarticle: \"SVR sebiaclear gel moussant 200 ml\", prixarticle: 30, dateCreation: new Date(\"2020-12-17\"), Classification : {idClas : 2, nomClas : \"Soins de la peau\"}},\n      { idarticle: 3, nomarticle: \"Kit Lissage Protein&Collagen 115 ml\", prixarticle: 109, dateCreation: new Date(\"2021-06-29\"), Classification : {idClas : 2, nomClas : \"Soins capillaires\"}},\n      { idarticle: 4, nomarticle: \"SVR hydraliane crème hydratante riche 40 Ml\", prixarticle: 46, dateCreation: new Date(\"2020-02-20\"), Classification : {idClas : 2, nomClas : \"Soins de la peau\"}}\n    ]; */\n  }\n\n  listeArticleCosmetique() {\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \" + jwt;\n    let httpHeaders = new HttpHeaders({\n      \"Authorization\": jwt\n    });\n    return this.http.get(this.apiURL + \"/all\", {\n      headers: httpHeaders\n    });\n  }\n  ajouterArticleCosmetique(article_COS) {\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \" + jwt;\n    let httpHeaders = new HttpHeaders({\n      \"Authorization\": jwt\n    });\n    return this.http.post(this.apiURL + \"/addcos\", article_COS, {\n      headers: httpHeaders\n    });\n  }\n  supprimerArticle_cosmetique(id) {\n    const url = `${this.apiURL}/delcos/${id}`;\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \" + jwt;\n    let httpHeaders = new HttpHeaders({\n      \"Authorization\": jwt\n    });\n    return this.http.delete(url, {\n      headers: httpHeaders\n    });\n  }\n  consulterArticle(id) {\n    const url = `${apiURL}/getbyid/${id}`;\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \" + jwt;\n    let httpHeaders = new HttpHeaders({\n      \"Authorization\": jwt\n    });\n    return this.http.get(url, {\n      headers: httpHeaders\n    });\n  }\n  trierArticle_cosmetique() {\n    this.cosmetiques = this.cosmetiques.sort((n1, n2) => {\n      if (n1 && n2 && n1.idarticle && n2.idarticle) {\n        if (n1.idarticle > n2.idarticle) {\n          return 1;\n        }\n        if (n1.idarticle < n2.idarticle) {\n          return -1;\n        }\n        return 0;\n      }\n      return 0;\n    });\n  }\n  updateArticle_cosmetique(arts) {\n    return this.http.put(this.apiURL + \"/updatecos\", arts, httpOptions);\n  }\n  listeclassifications() {\n    return this.http.get(this.apiURL + \"/clas\");\n  }\n  rechercheParClasstfication(idClas) {\n    const url = `${this.apiURL}/cosmetiqueClas/${idClas}`;\n    return this.http.get(url);\n  }\n  consulterClassification(id) {\n    const classificationTrouvee = this.classifications.find(clas => clas.idClas == id);\n    if (classificationTrouvee) {\n      return classificationTrouvee;\n    } else {\n      throw new Error(`Classification non trouvée pour l'ID : ${id}`);\n    }\n  }\n  rechercherParNom(nom) {\n    const url = `${this.apiURL}/cosmetiqueByName/${nom}`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function ArticleService_Factory(t) {\n    return new (t || ArticleService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArticleService,\n    factory: ArticleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ArticleService","constructor","http","authService","apiURL","apiURL_class","listeArticleCosmetique","jwt","getToken","httpHeaders","get","ajouterArticleCosmetique","article_COS","post","supprimerArticle_cosmetique","id","url","delete","consulterArticle","trierArticle_cosmetique","cosmetiques","sort","n1","n2","idarticle","updateArticle_cosmetique","arts","put","listeclassifications","rechercheParClasstfication","idClas","consulterClassification","classificationTrouvee","classifications","find","clas","Error","rechercherParNom","nom","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac","providedIn"],"sources":["D:\\2éme annéé\\s1\\angular\\cosmetique\\src\\app\\services\\article.service.ts"],"sourcesContent":["import { AuthService } from './auth.service';\nimport { Classification } from './../model/classification.model';\nimport { RechercheParClasstficationComponent } from './../recherche-par-classtfication/recherche-par-classtfication.component';\nimport { Injectable } from '@angular/core';\nimport { article } from '../model/article.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nconst httpOptions = {\n  headers: new HttpHeaders( {'Content-Type': 'application/json'} )\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n  apiURL: string = 'http://localhost:8090/cosmetiques/api';\n  apiURL_class: string = 'http://localhost:8090/cosmetiques/clas';\n\n  cosmetiques !: article[]; \n  classifications! : Classification[];\n \n\n  constructor(private http : HttpClient,\n              private authService : AuthService) {\n  /*\n    this.classifications = [ {idClas : 1,nomClas : \"Maquillage\"},\n                            {idClas : 2, nomClas : \"Soins de la peau\"},\n                            {idClas : 3, nomClas : \"Soins capillaires\"},\n                            {idClas : 4, nomClas : \"Parfums\"},\n                            {idClas : 5, nomClas : \"article d'hygiène personnelle\"},\n                            {idClas : 6, nomClas : \"Soins des ongles\"}]; \n\n\n  this.cosmetiques  = [\n    { idarticle: 1, nomarticle: \"SUN SECURE Blur SPF50\", prixarticle: 69, dateCreation: new Date(\"2011-01-14\") , Classification : {idClas : 2, nomClas : \"Soins de la peau\"}},\n    { idarticle: 2, nomarticle: \"SVR sebiaclear gel moussant 200 ml\", prixarticle: 30, dateCreation: new Date(\"2020-12-17\"), Classification : {idClas : 2, nomClas : \"Soins de la peau\"}},\n    { idarticle: 3, nomarticle: \"Kit Lissage Protein&Collagen 115 ml\", prixarticle: 109, dateCreation: new Date(\"2021-06-29\"), Classification : {idClas : 2, nomClas : \"Soins capillaires\"}},\n    { idarticle: 4, nomarticle: \"SVR hydraliane crème hydratante riche 40 Ml\", prixarticle: 46, dateCreation: new Date(\"2020-02-20\"), Classification : {idClas : 2, nomClas : \"Soins de la peau\"}}\n  ]; */\n  }\n\n  listeArticleCosmetique(): Observable<article[]> {\n      let jwt = this.authService.getToken();\n      jwt = \"Bearer \"+jwt;\n      let httpHeaders = new HttpHeaders({\"Authorization\":jwt})\n      return this.http.get<article[]>(this.apiURL+\"/all\",{headers:httpHeaders});\n  }\n  ajouterArticleCosmetique( article_COS: article):Observable<article>{\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \"+jwt;\n    let httpHeaders = new HttpHeaders({\"Authorization\":jwt})\n    return this.http.post<article>(this.apiURL+\"/addcos\", article_COS, {headers:httpHeaders});\n      \n  }\n      \n  supprimerArticle_cosmetique(id: number) {\n    const url = `${this.apiURL}/delcos/${id}`;\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \"+jwt;\n    let httpHeaders = new HttpHeaders({\"Authorization\":jwt})\n    return this.http.delete(url, {headers:httpHeaders});\n  }\n  \n  article!: article;\n\n  consulterArticle(id: number): Observable<article> {\n    const url = `${apiURL}/getbyid/${id}`;\n    let jwt = this.authService.getToken();\n    jwt = \"Bearer \" + jwt;\n    let httpHeaders = new HttpHeaders({ \"Authorization\": jwt })\n    return this.http.get<art>(url, { headers: httpHeaders });\n  }\n  \n\n  trierArticle_cosmetique() {\n    this.cosmetiques = this.cosmetiques.sort((n1, n2) => {\n      if (n1 && n2 && n1.idarticle && n2.idarticle) {\n        if (n1.idarticle > n2.idarticle) {\n          return 1;\n        }\n        if (n1.idarticle < n2.idarticle) {\n          return -1;\n        }\n        return 0;\n      }\n      return 0;\n    });\n\n  }\n  updateArticle_cosmetique(arts: article): Observable<article> {\n    return this.http.put<article>(this.apiURL+\"/updatecos\", arts, httpOptions);\n  }\n \n  listeclassifications():Observable<Classification[]>{\n    return this.http.get<Classification[]>(this.apiURL+\"/clas\");\n    }\n   \n  rechercheParClasstfication(idClas: number): Observable<article[]> {\n    const url = `${this.apiURL}/cosmetiqueClas/${idClas}`;\n    return this.http.get<article[]>(url);\n  }\n  \n  consulterClassification(id: number): Classification {\n    const classificationTrouvee = this.classifications.find(clas => clas.idClas == id);\n    if (classificationTrouvee) {\n      return classificationTrouvee;\n    } else {\n      throw new Error(`Classification non trouvée pour l'ID : ${id}`);\n    }\n  }\n  \n  rechercherParNom(nom: string):Observable< article[]> {\n    const url = `${this.apiURL}/cosmetiqueByName/${nom}`;\n    return this.http.get<article[]>(url);\n    }\n    \n    \n  }\n  \n  \n  \n  \n         \n\n  \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}