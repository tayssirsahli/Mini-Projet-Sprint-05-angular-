{"ast":null,"code":"import { User } from '../model/User.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"strong\");\n    i0.ɵɵtext(2, \"login ou mot de passe erron\\u00E9s..\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.user = new User();\n    this.erreur = 0;\n  }\n  onLoggedin() {\n    console.log(this.user);\n    let isValidUser = this.authService.SignIn(this.user);\n    if (isValidUser) this.router.navigate(['/']);else\n      //alert('Login ou mot de passe incorrecte!');\n      this.erreur = 1;\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"row\", \"justify-content-md-center\"], [1, \"col-md-4\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, LoginComponent_div_2_Template, 3, 0, \"div\", 2);\n        i0.ɵɵelementStart(3, \"form\")(4, \"div\", 3)(5, \"label\");\n        i0.ɵɵtext(6, \"Nom Utilisateur :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n        i0.ɵɵtext(10, \"Mot de passe :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n          return ctx.onLoggedin();\n        });\n        i0.ɵɵtext(14, \"Connexion\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.erreur == 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","authService","router","user","erreur","onLoggedin","console","log","isValidUser","SignIn","navigate","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_2_Template","ɵɵlistener","LoginComponent_Template_input_ngModelChange_7_listener","$event","username","LoginComponent_Template_input_ngModelChange_11_listener","password","LoginComponent_Template_button_click_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\2éme annéé\\s1\\angular\\cosmetique\\src\\app\\login\\login.component.ts","D:\\2éme annéé\\s1\\angular\\cosmetique\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../model/User.model';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  user = new User();\n  erreur=0;\n\n  constructor(private authService : AuthService,\n    private router: Router) { }\n    \n  onLoggedin() {\n    console.log(this.user);\n    let isValidUser: Boolean = this.authService.SignIn(this.user);\n    if (isValidUser)\n      this.router.navigate(['/']);\n    else\n      //alert('Login ou mot de passe incorrecte!');\n      this.erreur = 1;\n  }\n\n  }\n\n","<div class=\"row justify-content-md-center\">\n    <div class=\"col-md-4\">\n        <div class=\"alert alert-danger\" *ngIf= \"erreur==1\">\n            <strong>login ou mot de passe erronés..</strong>\n        </div>\n        <form>\n            <div class=\"form-group\">\n                <label>Nom Utilisateur :</label>\n                <input type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]= \"user.username\">\n            </div>\n            <div class=\"form-group\">\n                <label>Mot de passe :</label>\n                <input type=\"password\" name=\"password\" [(ngModel)]= \"user.password\" class=\"form-control\">\n            </div>\n            <div class=\"row justify-content-md-center\">\n                <button type=\"button\" (click)= \" onLoggedin()\" class=\"btn btn-success\">Connexion</button>\n            </div>\n        </form>\n    </div>\n</div>\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,qBAAqB;;;;;;;;ICClCC,EAAA,CAAAC,cAAA,aAAmD;IACvCD,EAAA,CAAAE,MAAA,2CAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADM5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,WAAyB,EACnCC,MAAc;IADJ,KAAAD,WAAW,GAAXA,WAAW;IACrB,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,IAAI,GAAG,IAAIT,IAAI,EAAE;IACjB,KAAAU,MAAM,GAAC,CAAC;EAGoB;EAE5BC,UAAUA,CAAA;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,IAAI,CAAC;IACtB,IAAIK,WAAW,GAAY,IAAI,CAACP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACN,IAAI,CAAC;IAC7D,IAAIK,WAAW,EACb,IAAI,CAACN,MAAM,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAE5B;MACA,IAAI,CAACN,MAAM,GAAG,CAAC;EACnB;EAAC,QAAAO,CAAA,G;qBAfUZ,cAAc,EAAAJ,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAnB,EAAA,CAAAiB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdlB,cAAc;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3B7B,EAAA,CAAAC,cAAA,aAA2C;QAEnCD,EAAA,CAAA+B,UAAA,IAAAC,6BAAA,iBAEM;QACNhC,EAAA,CAAAC,cAAA,WAAM;QAESD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChCH,EAAA,CAAAC,cAAA,eAAqF;QAA7BD,EAAA,CAAAiC,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAL,GAAA,CAAAtB,IAAA,CAAA4B,QAAA,GAAAD,MAAA;QAAA,EAA4B;QAApFnC,EAAA,CAAAG,YAAA,EAAqF;QAEzFH,EAAA,CAAAC,cAAA,aAAwB;QACbD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC7BH,EAAA,CAAAC,cAAA,gBAAyF;QAAlDD,EAAA,CAAAiC,UAAA,2BAAAI,wDAAAF,MAAA;UAAA,OAAAL,GAAA,CAAAtB,IAAA,CAAA8B,QAAA,GAAAH,MAAA;QAAA,EAA4B;QAAnEnC,EAAA,CAAAG,YAAA,EAAyF;QAE7FH,EAAA,CAAAC,cAAA,cAA2C;QACjBD,EAAA,CAAAiC,UAAA,mBAAAM,iDAAA;UAAA,OAAYT,GAAA,CAAApB,UAAA,EAAY;QAAA;QAAyBV,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAbhEH,EAAA,CAAAwC,SAAA,GAAgB;QAAhBxC,EAAA,CAAAyC,UAAA,SAAAX,GAAA,CAAArB,MAAA,MAAgB;QAMeT,EAAA,CAAAwC,SAAA,GAA4B;QAA5BxC,EAAA,CAAAyC,UAAA,YAAAX,GAAA,CAAAtB,IAAA,CAAA4B,QAAA,CAA4B;QAI7CpC,EAAA,CAAAwC,SAAA,GAA4B;QAA5BxC,EAAA,CAAAyC,UAAA,YAAAX,GAAA,CAAAtB,IAAA,CAAA8B,QAAA,CAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}